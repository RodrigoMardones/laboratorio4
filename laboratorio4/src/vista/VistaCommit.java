/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;
import modelo.repository.Repository;

/**
 *
 * @author rodrigomardones
 */
public class VistaCommit extends javax.swing.JFrame {
    
    Repository git;
    /**
     * Creates new form vistaCommit
     */
    public VistaCommit() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        salirCommit = new javax.swing.JButton();
        crearCommit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageCommit = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        salirCommit.setText("salir");
        salirCommit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirCommitActionPerformed(evt);
            }
        });

        crearCommit.setText("crear");
        crearCommit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearCommitActionPerformed(evt);
            }
        });

        messageCommit.setColumns(20);
        messageCommit.setRows(5);
        jScrollPane1.setViewportView(messageCommit);

        jLabel1.setText("mensaje Commit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(crearCommit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(salirCommit)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(60, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(96, 96, 96))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crearCommit)
                    .addComponent(salirCommit))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * descrip: funcion que cierra la vista de commit
     * @param evt evento asociado a click
     * @return void
     */
    private void salirCommitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirCommitActionPerformed
        this.dispose();
    }//GEN-LAST:event_salirCommitActionPerformed
    /**
     * descrip: funcion que crea el commit en el repo con sus respectivos parametros
     * @param evt evento asociado al click del boton
     * @return void
     */
    private void crearCommitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearCommitActionPerformed
        String mensaje = messageCommit.getText();
        if(mensaje == null){
            //error
            System.out.println("error creando commit");
        }else {
            this.git.gitCommit(mensaje);
        }
        this.dispose();
    }//GEN-LAST:event_crearCommitActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton crearCommit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea messageCommit;
    private javax.swing.JButton salirCommit;
    // End of variables declaration//GEN-END:variables
}
